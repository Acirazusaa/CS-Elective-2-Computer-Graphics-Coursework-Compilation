#define GLEW_STATIC

#include <iostream>
#include <GL/glew.h>
#include <GL/glut.h>

void triangle() {
    GLfloat trianglevertices[] = {
		0.30f, 0.0f, 0.0f, 0.0f, 0.132f, 0.0f,				
    	0.0f,  0.30f, 0.0f,	0.0f, 0.132f, 0.0f,			
    	-0.0f, -0.30f, 0.0f, 0.0f, 0.132f, 0.0f,			

    	-0.30f, 0.0f, 0.240f, 0.240f, 0.132f, 0.0f,			
    	0.0f,  0.30f, 0.240f, 0.240f, 0.132f, 0.0f,			
    	-0.0f, -0.30f, 0.240f, 0.240f, 0.132f, 0.0f,	
		
    	-0.30f, 0.0f, 0.180f, 0.111f, 0.112f, 0.0f,		
    	0.15f, 0.30f, 0.180f, 0.111f, 0.112f, 0.0f,	
   		-0.15f, 0.30f, 0.180f, 0.111f, 0.112f, 0.0f,					

    	-0.30f, 0.0f, 0.241f, 0.10f, 0.67f, 0.0f,		
    	-0.15f, -0.30f, 0.241f, 0.10f, 0.67f, 0.0f,			
   		0.15f, -0.30f, 0.241f, 0.10f, 0.67f, 0.0f,		

   		0.30f, 0.0f, 0.79f, 0.156f, 0.145f, 0.0f,		
   		0.15f, 0.30f, 0.79f, 0.156f, 0.145f, 0.0f,	
    	-0.15f, 0.30f, 0.79f, 0.156f, 0.145f, 0.0f,		

   		0.30f, 0.0f, 0.185f, 0.11f, 0.217f, 0.0f,			
    	0.15f, -0.30f, 0.185f, 0.11f, 0.217f, 0.0f,			
  	 	-0.15f, -0.30f, 0.185f, 0.11f, 0.217f, 0.0f,
	};

    GLuint VBOid;
    glGenBuffers(1, &VBOid);
    glBindBuffer(GL_ARRAY_BUFFER, VBOid);
    glBufferData(GL_ARRAY_BUFFER, sizeof(trianglevertices), trianglevertices, GL_STATIC_DRAW);

    glEnableClientState(GL_VERTEX_ARRAY);
    glEnableClientState(GL_COLOR_ARRAY);

    glVertexPointer(3, GL_FLOAT, 6 * sizeof(GLfloat), 0);
    glColorPointer(3, GL_FLOAT, 6 * sizeof(GLfloat), (GLvoid*)(3 * sizeof(GLfloat)));
    glDrawArrays(GL_TRIANGLES, 0, 18);

    glDisableClientState(GL_VERTEX_ARRAY);
    glDisableClientState(GL_COLOR_ARRAY);

    glBindBuffer(GL_ARRAY_BUFFER, 0);
    glDeleteBuffers(1, &VBOid);
}

void display(){
	glClear(GL_COLOR_BUFFER_BIT);
	triangle();
	glFlush();
}

int main(int argc, char** argv) {

	glutInit(&argc,argv);
	glutInitWindowSize(800,600);
	glutCreateWindow("Lab 7");
	
	GLenum err = glewInit();
	if (err == GLEW_OK){
		glutDisplayFunc(display);
		glutMainLoop();
	}
	
	return 0;
}
